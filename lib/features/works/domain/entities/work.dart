import 'package:freezed_annotation/freezed_annotation.dart';

part 'work.freezed.dart';

/// Сущность "Смена".
///
/// Описывает рабочую смену на объекте, включая дату, объект, инициатора, статус и фотографии.
@freezed
abstract class Work with _$Work {
  /// Создаёт сущность смены.
  ///
  /// [id] — идентификатор смены (опционально)
  /// [date] — дата смены
  /// [objectId] — идентификатор объекта
  /// [openedBy] — идентификатор пользователя, открывшего смену
  /// [status] — статус смены (например, open/closed)
  /// [photoUrl] — ссылка на фото смены (опционально)
  /// [eveningPhotoUrl] — ссылка на вечернее фото (опционально)
  /// [createdAt] — дата создания записи (опционально)
  /// [updatedAt] — дата последнего обновления (опционально)
  /// [totalAmount] — общая сумма всех работ (вычисляется автоматически через триггеры БД)
  /// [itemsCount] — количество работ в смене (вычисляется автоматически через триггеры БД)
  /// [employeesCount] — количество уникальных сотрудников (вычисляется автоматически через триггеры БД)
  const factory Work({
    /// Идентификатор смены.
    String? id,

    /// Дата смены.
    required DateTime date,

    /// Идентификатор объекта.
    required String objectId,

    /// Идентификатор пользователя, открывшего смену.
    required String openedBy,

    /// Статус смены (например, open/closed).
    required String status,

    /// Ссылка на фото смены.
    String? photoUrl,

    /// Ссылка на вечернее фото смены.
    String? eveningPhotoUrl,

    /// Дата создания записи.
    DateTime? createdAt,

    /// Дата последнего обновления.
    DateTime? updatedAt,

    /// Общая сумма всех работ в смене.
    ///
    /// Вычисляется автоматически через триггеры БД при изменении work_items.
    /// Nullable для обратной совместимости.
    double? totalAmount,

    /// Количество работ в смене.
    ///
    /// Вычисляется автоматически через триггеры БД при изменении work_items.
    /// Nullable для обратной совместимости.
    int? itemsCount,

    /// Количество уникальных сотрудников в смене.
    ///
    /// Вычисляется автоматически через триггеры БД при изменении work_hours.
    /// Nullable для обратной совместимости.
    int? employeesCount,
  }) = _Work;
}
