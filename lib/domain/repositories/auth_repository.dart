import 'package:projectgt/domain/entities/user.dart';

/// Абстракция репозитория аутентификации пользователя.
///
/// Определяет методы для входа, регистрации, выхода и получения текущего пользователя.
/// Используется в слое домена для инкапсуляции логики работы с аутентификацией.
///
/// Пример использования:
/// ```dart
/// final user = await authRepository.login('email', 'password');
/// ```
abstract class AuthRepository {
  /// Выполняет вход пользователя по email и паролю.
  ///
  /// [email] — email пользователя.
  /// [password] — пароль пользователя.
  /// Возвращает [User] при успешной аутентификации.
  /// Бросает исключение при ошибке.
  Future<User> login(String email, String password);

  /// Регистрирует нового пользователя.
  ///
  /// [name] — имя пользователя.
  /// [email] — email пользователя.
  /// [password] — пароль пользователя.
  /// Возвращает созданного [User].
  /// Бросает исключение при ошибке.
  Future<User> register(String name, String email, String password);

  /// Выполняет выход пользователя из системы.
  ///
  /// Очищает токены и локальные данные сессии.
  Future<void> logout();

  /// Получает текущего авторизованного пользователя.
  ///
  /// Возвращает [User], если пользователь авторизован, иначе — null.
  Future<User?> getCurrentUser();
} 